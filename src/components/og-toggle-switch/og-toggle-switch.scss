// =============================================================================
// ORGENIC TOGGLE SWITCH
// =============================================================================
:host {

    // BASE
    // ---
    // Variables that are used on different places inside this component.

    /**
     * @prop --og-color-main:
     * Main color used for the colored parts of the Button.
     */
    --og-color-main: var(--OG-COLOR-SHADE--50, #{$og-color-shade--50});

    /**
     * @prop --og-color-main--active:
     * Variant on Main Color when Toggle Switch is active.
     */
    --og-color-main--active: var(--OG-COLOR-ONE, #{$og-color-one});

    /**
     * @prop --og-color-main--conter:
     * Conter Color to Main Color to guarantee good contrast.
     */
    --og-color-main--conter: var(--OG-COLOR-ONE--CONTER, #{$og-color-one--conter});

    /**
     * @prop --og-color-main--disabled:
     * Variant on Main Color when Toggle Switch is disabled.
     */
    --og-color-main--disabled: var(--OG-COLOR-SHADE--40, #{$og-color-shade--40});

    // PROPERTIES
    // ---
    // Variables that match themable Properties

    /**
     * @prop --og-toggle-Background:
     * Background of the Toggle Switch.
     */
    --og-toggle-Background: var(--og-color-main);

    /**
     * @prop --og-toggle-BorderRadius:
     * Border Radius of the Toggle Switch.
     */
    --og-toggle-BorderRadius: 1.25rem;

    /**
     * @prop --og-toggle-Opacity:
     * Opacity of the Toggle Switch.
     */
    --og-toggle-Opacity: #{$og-opacity--on};

    /**
     * @prop --og-toggle-Opacity--disabled:
     * Opacity of the Toggle Switch when it's disabled.
     */
    --og-toggle-Opacity--disabled: #{$og-opacity--disabled};

    /**
     * @prop --og-toggle-Width:
     * Width of the Toggle Switch.
     */
    --og-toggle-Width: 3rem;

    /**
     * @prop --og-toggle-Height:
     * Height of the Toggle Switch.
     */
    --og-toggle-Height: 1.5rem;


    // Component's 'Knob' global Variables

    /**
     * @prop --og-knob-offset:
     * Space between the Knob and the Toggle Background.
     */
    --og-knob-offset: 0.125rem;

    /**
     * @prop --og-knob-size:
     * Shorthand value for width and height of the Knob.
     */
    --og-knob-size: 1.25rem;

    // Component's 'Knob' property Variables

    /**
     * @prop --og-knob-Background:
     * Background of the Knob.
     */
    --og-knob-Background: var(--og-color-main--conter);

    /**
     * @prop --og-knob-Background:
     * Border Radius of the Knob.
     */
    --og-knob-BorderRadius: 1.5rem;

    /**
     * @prop --og-knob-BoxShadow:
     * Shadow of the Knob.
     */
    --og-knob-BoxShadow: 0 0.125rem 0.25rem 0 var(--og--theme-shadow-color, #{$og-color-shadow});

    /**
     * @prop --og-knob-Width:
     * Width of the Knob.
     */
    --og-knob-Width: var(--og-knob-size);

    /**
     * @prop --og-knob-Height:
     * Height of the Knob.
     */
    --og-knob-Height: var(--og-knob-size);

    /**
     * @prop --og-knob-Left:
     * Left position of the Knob.
     */
    --og-knob-Left: var(--og-knob-offset);

    /**
     * @prop --og-knob-Left--active:
     * Left position of the Knob when the Toggle Switch is active.
     */
    --og-knob-Left--active: calc(var(--og-toggle-Width) - var(--og-knob-Width) - var(--og-knob-offset));

    /**
     * @prop --og-knob-Top:
     * Top position of the Knob.
     */
    --og-knob-Top: calc((var(--og-toggle-Height) / 2) - (var(--og-knob-Height) / 2));


    /**
     * @prop --og-overlay-Background:
     * Overlay Background used for :hover and :active state of the button.
     */
    --og-overlay-Background: var(--OG-COLOR-ONE--BOOST, #{$og-color-one--boost});

    /**
     * @prop --og-overlay-BorderRadius:
     * Overlay Border Radius.
     */
    --og-overlay-BorderRadius: 10rem;

    /**
     * @prop --og-overlay-Opacity:
     * Inital Overlay opacity.
     */
    --og-overlay-Opacity: var(--OG-OPACITY--OFF, #{$og-opacity--off});

    /**
     * @prop --og-overlay-Opacity--hover:
     * Overlay opacity on :hover state of the Toggle Switch.
     */
    --og-overlay-Opacity--hover: var(--OG-OPACITY--HOVER, #{$og-opacity--hover});

    /**
     * @prop --og-overlay-Opacity--active:
     * Overlay opacity on :active state of the Toggle Switch.
     */
    --og-overlay-Opacity--active: var(--OG-OPACITY--ACTIVE, #{$og-opacity--active});

    box-sizing: border-box;
    display: inline-block;
    user-select: none;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

:host(.is-checked) {
    --og-color-main: var(--og-color-main--active);
    --og-knob-Left: var(--og-knob-Left--active);
    --og-overlay-Background: var(--og-color-main);
}

:host(.is-disabled) {
    --og-color-main: var(--og-color-main--disabled);
    --og-knob-BoxShadow: none;
    --og-toggle-Opacity: var(--og-toggle-Opacity--disabled);
    pointer-events: none;
}

:host(:hover) {
    --og-overlay-Opacity: var(--og-overlay-Opacity--hover);
}

:host(:active) {
    --og-overlay-Opacity: var(--og-overlay-Opacity--active);
}

.og-toggle-switch__input {
    border: 0 none transparent;
    height: 0;
    clip-path: inset(100% 100% 0 0);
    margin: 0;
    outline: 0;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 0;
}

.og-toggle-switch__toggle {
    background: var(--og-toggle-Background);
    border-radius: var(--og-toggle-BorderRadius);
    cursor: pointer;
    display: inline-block;
    height: var(--og-toggle-Height);
    opacity: var(--og-toggle-Opacity);
    outline: none;
    position: relative;
    transition: background 150ms ease-in-out;
    width: var(--og-toggle-Width);
    z-index: 1;
}

.og-toggle-switch__toggle__knob {
    display: block;
    height: var(--og-knob-Height);
    left: var(--og-knob-Left);
    position: absolute;
    top: var(--og-knob-Top);
    transition: all 150ms ease-in-out;
    width: var(--og-knob-Width);

    // The actual Knob background.
    // Needs his own layer so we can place the Indicator behind it.
    &::before {
        background: var(--og-knob-Background);
        border-radius: var(--og-knob-BorderRadius);
        bottom: 0;
        box-shadow: var(--og-knob-BoxShadow);
        content: "";
        display: block;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
        transition: all 150ms ease-in-out;
        z-index: 3;
    }

    // State Indicator for :hover, :active
    &::after {
        content: "";
        background: var(--og-overlay-Background);
        border-radius: var(--og-overlay-BorderRadius);
        bottom: -1rem;
        left: -1rem;
        opacity: var(--og-overlay-Opacity);
        pointer-events: none;
        position: absolute;
        right: -1rem;
        top: -1rem;
        z-index: 2;
    }
}
